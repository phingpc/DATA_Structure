
package week9.jframeform;

import java.util.Arrays;
import java.util.Enumeration;
import java.util.Random;
import javax.swing.tree.DefaultMutableTreeNode;

class BinarySearchTree { // edit by อาจารย์

    DefaultMutableTreeNode root;

    public BinarySearchTree() {
        root = null;
    }

    void createFromArray(int[] a) {
        for (int i : a) {
            add(i);
        }
    }

    void add(int data) {
        if (root == null) {
            root = new DefaultMutableTreeNode(data);
        } else {
            //addComplete(root, data); //ถ้าต้องการเก็บข้อมูลแบบ Complete Binary Tree
            addBST(root, data); //ถ้าต้องการเก็บข้อมูลแบบ Binary Search Tree
        }
    }

    // this is the add for complete binary tree ... ok
    void addComplete(DefaultMutableTreeNode node, int data) {
        if (node.getChildCount() < 2) {
            node.add(new DefaultMutableTreeNode(data));
        } else {
            addComplete(node.getNextNode(), data);
        }
    }

    // this is the add for BST
    void addBST(DefaultMutableTreeNode node, int data) {
        switch (node.getChildCount()) {
            case 0:
                if (data < Integer.parseInt(node.toString())) { // add as left node
                    node.add(new DefaultMutableTreeNode(data));
                    node.add(new DefaultMutableTreeNode(0));
                } else {  // add as right node
                    node.add(new DefaultMutableTreeNode(0));
                    node.add(new DefaultMutableTreeNode(data));
                }
                break;
            case 2:
                if (data < Integer.parseInt(node.toString())) {
                    if (Integer.parseInt(node.getChildAt(0).toString()) == 0) {
                        node.getNextNode().setUserObject(data);
                    } else {
                        addBST(node.getNextNode(), data);
                    }
                } else {
                    if (Integer.parseInt(node.getChildAt(1).toString()) == 0) {
                        node.getNextNode().getNextSibling().setUserObject(data);
                    } else {
                        addBST(node.getNextNode().getNextSibling(), data);
                    }
                }
                break;
            default:
                break;
        }
    }
}



public class NewJFrame extends javax.swing.JFrame {

    
    public static int[] x ;
    public static BinarySearchTree bst ;
    public static String ans_inor = "";
    
    static int nBST = 0;
    static int countBST = 0;
    static void inorderBST(DefaultMutableTreeNode root) {
        if (root != null) {
            if (root.getChildCount() > 0) {
                inorderBST(root.getNextNode());
            }
            if (Integer.parseInt(root.toString()) > 0) {
                ans_inor += root;
                countBST++;
            }
            if (countBST != nBST && Integer.parseInt(root.toString()) > 0) {
                ans_inor += ", ";
            }
            if (root.getChildCount() > 1) {
                inorderBST(root.getNextNode().getNextSibling());
            }
        }
    }
    
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("650710673-จักรพัชร คัชชาพงษ์");

        jButton1.setText("Gen Input");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Gen BST");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("inorder");

        jLabel2.setText("breadfirstsearch");

        jLabel3.setText("preorder");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 310, Short.MAX_VALUE)
                    .addComponent(jTextField4)
                    .addComponent(jTextField3)
                    .addComponent(jTextField1)
                    .addComponent(jTextField2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(104, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Random random = new Random();
        int n = random.nextInt(8)+3;
        x = new int[n];
        for(int i=0; i<n; i++) {
            x[i] = random.nextInt(100);
        }
        jTextField1.setText(Arrays.toString(x).substring(1, Arrays.toString(x).length()-1)); // แสดงผลบน jTextField1
        // การจัดเก็บไฟล์
        bst = new BinarySearchTree();
        bst.createFromArray(x); //จัดเก็บ arrays ไฟล์ของ int
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String ans1 = "";
        ans1 += bst.root.getDepth() + " ";
        Enumeration<DefaultMutableTreeNode> enum1 = (Enumeration<DefaultMutableTreeNode>)(Object)bst.root.depthFirstEnumeration();
        int count = 0;
        while (enum1.hasMoreElements()) {
            DefaultMutableTreeNode node = enum1.nextElement();
            if(Integer.parseInt(node.toString()) > 0 )                
                count++;
        }
        ans1 += count;
        jTextField2.setText(ans1);
        ////////////////////////////////////////
        //inorder
        ////////////////////////////////////////
        inorderBST(bst.root);
        jTextField3.setText(ans_inor.substring(0,ans_inor.length()-2));
        
        
        ////////////////////////////////////////
        //breadfirstsearch
        ////////////////////////////////////////
        String breadfirstsearch = "";
        enum1 = (Enumeration<DefaultMutableTreeNode>)(Object)bst.root.breadthFirstEnumeration();
        int c = 0;
        count = 0;
        while (enum1.hasMoreElements()) {
            DefaultMutableTreeNode node = enum1.nextElement();
            if(Integer.parseInt(node.toString()) > 0 ){
                breadfirstsearch +=node;
                c++;
            }
            if(c!=count && Integer.parseInt(node.toString()) > 0)
                breadfirstsearch +=", ";
        }
        jTextField4.setText(breadfirstsearch.substring(0,breadfirstsearch.length()-2));
        
        ////////////////////////////////////////
        // preorder
        ////////////////////////////////////////
        String preorder = "";
        enum1 = (Enumeration<DefaultMutableTreeNode>)(Object)bst.root.preorderEnumeration();
        c=0;
        while (enum1.hasMoreElements()) {
            DefaultMutableTreeNode node = enum1.nextElement();
            if(Integer.parseInt(node.toString()) > 0 ){
                preorder +=node;
                c++;
            }
            if(c!=count && Integer.parseInt(node.toString()) > 0)
                preorder+=", ";
        }
        jTextField5.setText(preorder.substring(0, preorder.length()-2));
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    // End of variables declaration//GEN-END:variables
}
